feign:
  hystrix:
    enabled: false
  okhttp:
    enabled: true
  client:
    config:
      usersClient:
        url: http://jsonplaceholder.typicode.com
        connectTimeout: 5000
        readTimeout: 5000
        errorDecoder: com.mylibraries.feign.errordecoders.CustomFeignErrorDecoder
        retryer: com.mylibraries.feign.retriers.NeverRetry
        decode404: false
        decoder: com.mylibraries.feign.decoders.CustomJacksonDecoder
      commentsClient:
        url: http://jsonplaceholder.typicode.com
        connectTimeout: 5000
        readTimeout: 5000

resilience4j.circuitbreaker:
  instances:
    usersClient:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      waitDurationInOpenState: 50s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
      recordFailurePredicate: io.github.robwin.exception.RecordFailurePredicate
    commentsClient:
      registerHealthIndicator: true
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      minimumNumberOfCalls: 20
      failureRateThreshold: 50

resilience4j.retry:
  instances:
    usersClient:
      maxRetryAttempts: 3
      waitDuration: 10s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - io.github.robwin.exception.BusinessException

resilience4j.bulkhead:
  instances:
    usersClient:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 20

resilience4j.thread-pool-bulkhead:
  instances:
    usersClient:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1

resilience4j.ratelimiter:
  instances:
    usersClient:
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      registerHealthIndicator: true
      eventConsumerBufferSize: 100

resilience4j.timelimiter:
  instances:
    usersClient:
      timeoutDuration: 2s
      cancelRunningFuture: true